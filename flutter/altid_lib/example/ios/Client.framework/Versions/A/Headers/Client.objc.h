// Objective-C API for talking to github.com/altid/libs/client Go package.
//   gobind -lang=objc github.com/altid/libs/client
//
// File is generated by gobind. Do not edit.

#ifndef __Client_H__
#define __Client_H__

@import Foundation;
#include "ref.h"
#include "Universe.objc.h"


@class ClientClient;

/**
 * Client represents a 9p client session
 */
@interface ClientClient : NSObject <goSeqRefInterface> {
}
@property(strong, readonly) _Nonnull id _ref;

- (nonnull instancetype)initWithRef:(_Nonnull id)ref;
/**
 * NewClient returns a client ready to connect to addr
 */
- (nullable instancetype)init:(NSString* _Nullable)addr;
/**
 * Aside returns the contents of the `aside` file for a given buffer
 */
- (NSData* _Nullable)aside:(NSError* _Nullable* _Nullable)error;
/**
 * Attach is called after optionally calling Auth
 */
- (BOOL)attach:(NSError* _Nullable* _Nullable)error;
/**
 * Auth is optionally called after Connect to authenticate with the server
 */
- (BOOL)auth:(NSError* _Nullable* _Nullable)error;
/**
 * Connect performs the network dial for the connection
 */
- (BOOL)connect:(long)debug error:(NSError* _Nullable* _Nullable)error;
// skipped method Client.Ctl with unsupported parameter or return types

// skipped method Client.Feed with unsupported parameter or return types

/**
 * Input appends the given data string to input
 */
- (BOOL)input:(NSData* _Nullable)data ret0_:(long* _Nullable)ret0_ error:(NSError* _Nullable* _Nullable)error;
/**
 * Notifications returns and clears any pending notifications
 */
- (NSData* _Nullable)notifications:(NSError* _Nullable* _Nullable)error;
/**
 * Status returns the contents of the `status` file for a given buffer
 */
- (NSData* _Nullable)status:(NSError* _Nullable* _Nullable)error;
/**
 * Tabs returns the contents of the `tabs` file for the server
 */
- (NSData* _Nullable)tabs:(NSError* _Nullable* _Nullable)error;
/**
 * Title returns the contents of the `title` file for a given buffer
 */
- (NSData* _Nullable)title:(NSError* _Nullable* _Nullable)error;
@end

// skipped const CmdAside with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdAttach with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdAuth with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdBuffer with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdClose with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdConnect with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdFeed with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdInput with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdLink with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdNotify with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdOpen with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdRefresh with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdStatus with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdTabs with unsupported type: github.com/altid/libs/client.CmdType

// skipped const CmdTitle with unsupported type: github.com/altid/libs/client.CmdType

/**
 * MSIZE - maximum size for a message
 */
FOUNDATION_EXPORT const int64_t ClientMSIZE;

@interface Client : NSObject
/**
 * ErrBadArgs is returned from Ctl when incorrect arguments are provided
 */
+ (NSError* _Nullable) errBadArgs;
+ (void) setErrBadArgs:(NSError* _Nullable)v;

@end

/**
 * NewClient returns a client ready to connect to addr
 */
FOUNDATION_EXPORT ClientClient* _Nullable ClientNewClient(NSString* _Nullable addr);

/**
 * NewMockClient returns a client for testing
Feed, if called, will be populated with data from google's GoFuzz every 100ms
 */
FOUNDATION_EXPORT ClientClient* _Nullable ClientNewMockClient(NSString* _Nullable addr);

#endif
